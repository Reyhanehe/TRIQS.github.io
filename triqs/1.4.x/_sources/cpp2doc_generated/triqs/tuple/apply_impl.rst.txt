..
   Generated automatically using the command :
   c++2doc.py -N triqs /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/doc/reference/doc_root.hpp --output_directory=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/doc/cpp2doc_generated --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/ --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/tools/
   /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/triqs/utility/tuple_tools.hpp

.. highlight:: c


.. _apply_impl:

apply_impl
============

**Synopsis**:

.. code-block:: c

    template<typename F, typename T, size_t Is>
    decltype(auto) apply_impl (F && f, T && t, std14::index_sequence<Is...> ) ;


---------------------------------------


.. code-block:: c

    #include <None>

..


 apply(f, t)
 f : a callable object
 t a tuple
 Returns : f(t0, t1 ...)
 Cf : http:www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3915.pdf
 for the idea of using the sequence, which is used several times below.
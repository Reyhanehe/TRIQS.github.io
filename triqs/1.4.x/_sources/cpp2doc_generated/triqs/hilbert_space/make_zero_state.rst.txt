..
   Generated automatically using the command :
   c++2doc.py -N triqs /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/doc/reference/doc_root.hpp --output_directory=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/doc/cpp2doc_generated --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/ --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/tools/
   /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/triqs/hilbert_space/state.hpp

.. highlight:: c


.. _make_zero_state:

make_zero_state
=================

**Synopsis**:

.. code-block:: c

    template<typename HilbertSpace, typename ScalarType, bool BasedOnMap>
    state<HilbertSpace, ScalarType, BasedOnMap> make_zero_state (const
   state<HilbertSpace, ScalarType, BasedOnMap> & st) ;


---------------------------------------


.. code-block:: c

    #include <triqs/hilbert_space/state.hpp>

..


 Make a copy of a given state with all amplitudes set to 0



Template parameters
-----------------------



   * **HilbertSpace**: Hilbert space type, one of :ref:`hilbert_space` and :ref:`sub_hilbert_space`


   * **ScalarType**: Amplitude type, normally `double` or `std::complex<double>`


   * **BasedOnMap**: Use the implementation based on a map



Parameters
-------------


   * **st**: State object to copy
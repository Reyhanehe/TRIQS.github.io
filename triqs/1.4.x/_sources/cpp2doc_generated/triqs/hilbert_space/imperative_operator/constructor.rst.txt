..
   Generated automatically using the command :
   c++2doc.py -N triqs /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/doc/reference/doc_root.hpp --output_directory=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/doc/cpp2doc_generated --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/ --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/tools/
   /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/triqs/hilbert_space/imperative_operator.hpp

.. highlight:: c


.. _imperative_operator_constructor:

constructor
=============

**Synopsis**:

.. code-block:: c

    imperative_operator () ;                                                                                                                                                                                                                                                                                       (1)

    imperative_operator (const triqs::operators::many_body_operator_generic<scalar_t>
   & op, const triqs::hilbert_space::fundamental_operator_set & fops,
   triqs::hilbert_space::imperative_operator::hilbert_map_t hmap = =hilbert_map_t(,
   const std::vector<sub_hilbert_space> * sub_spaces_set) ;     (2)


---------------------------------------



(1) Construct a zero operator






---------------------------------------



(2) Constructor from a `many_body_operator` and a `fundamental_operator_set`



Parameters
-------------


   * **op**: Source `many_body_operator` object




   * **fops**: :ref:`fundamental_operator_set`; must contain all index sequences met in `op`




   * **hmap**: Map of subspaces-to-subspaces connections generated by `op` (only for `UseMap = true`)




   * **sub_spaces_set**: Pointer to a vector of all Hilbert subspaces referred by `hmap` (only for `UseMap = true`)
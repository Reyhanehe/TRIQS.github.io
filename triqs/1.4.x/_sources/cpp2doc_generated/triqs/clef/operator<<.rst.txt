..
   Generated automatically using the command :
   c++2doc.py -N triqs /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/doc/reference/doc_root.hpp --output_directory=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/doc/cpp2doc_generated --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/ --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/tools/
   /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/triqs/./clef/./clef.c14.hpp

.. highlight:: c


.. _operator<<:

operator<<
============

**Synopsis**:

.. code-block:: c

    template<typename F, typename RHS, int Is>                                                                     (1)
    void operator<< (expr<tags::function, F, placeholder<Is>...> && ex, RHS && rhs) ;

    template<typename F, typename RHS, int Is>                                                                     (2)
    void operator<< (const expr<tags::function, F, placeholder<Is>...> & ex, RHS && rhs) ;

    template<typename F, typename RHS, int Is>                                                                     (3)
    void operator<< (expr<tags::function, F, placeholder<Is>...> & ex, RHS && rhs) ;

    template<typename F, typename RHS, typename T>                                                                 (4)
    void operator<< (expr<tags::function, F, T...> && ex, RHS && rhs) ;

    template<typename F, typename RHS, typename T>                                                                 (5)
    void operator<< (expr<tags::function, F, T...> & ex, RHS && rhs) ;

    template<typename F, typename RHS, typename T>                                                                 (6)
    void operator<< (const expr<tags::function, F, T...> & ex, RHS && rhs) ;

    template<typename F, typename RHS, int Is>                                                                     (7)
    void operator<< (const expr<tags::subscript, F, placeholder<Is>...> & ex, RHS && rhs) ;

    template<typename F, typename RHS, int Is>                                                                     (8)
    void operator<< (expr<tags::subscript, F, placeholder<Is>...> && ex, RHS && rhs) ;

    template<typename F, typename RHS, typename T>                                                                 (9)
    void operator<< (expr<tags::subscript, F, T...> && ex, RHS && rhs) ;

    template<typename F, typename RHS, typename T>                                                                 (10)
    void operator<< (expr<tags::subscript, F, T...> & ex, RHS && rhs) ;

    template<typename F, typename RHS, typename T>                                                                 (11)
    void operator<< (const expr<tags::subscript, F, T...> & ex, RHS && rhs) ;

    template<int N>                                                                                                (12)
    std::ostream & operator<< (std::ostream & sout, placeholder<N> ) ;

    template<typename T>                                                                                           (13)
    std::ostream & operator<< (std::ostream & out, const std::reference_wrapper<T> & x) ;

    template<typename Tag, typename L>                                                                             (14)
    requires(std::is_base_of<tags::unary_op, Tag>::value)
    std::ostream &  operator<< (std::ostream & sout, const expr<Tag, L> & ex) ;

    template<typename Tag, typename L, typename R>                                                                 (15)
    requires(std::is_base_of<tags::binary_op, Tag>::value)
    std::ostream &  operator<< (std::ostream & sout, const expr<Tag, L, R> & ex) ;

    template<typename C, typename A, typename B>                                                                   (16)
    std::ostream & operator<< (std::ostream & sout, const expr<tags::if_else, C, A, B> & ex) ;

    template<typename T>                                                                                           (17)
    std::ostream & operator<< (std::ostream & sout, const expr<tags::function, T...> & ex) ;

    template<typename T>                                                                                           (18)
    std::ostream & operator<< (std::ostream & sout, const expr<tags::subscript, T...> & ex) ;

    template<typename T>                                                                                           (19)
    std::ostream & operator<< (std::ostream & sout, const expr<tags::terminal, T> & ex) ;

    template<typename T>                                                                                           (20)
    std::ostream & operator<< (std::ostream & sout, const expr<tags::subscript, T> & ex) ;

    template<typename T>                                                                                           (21)
    std::ostream & operator<< (std::ostream & sout, const expr<tags::negate, T> & ex) ;

    template<typename Expr, int Is>                                                                                (22)
    std::ostream & operator<< (std::ostream & sout, const make_fun_impl<Expr, Is...> & x) ;

    template<typename F>                                                                                           (23)
    std::ostream & operator<< (std::ostream & out, const function<F> & x) ;

    std::ostream & operator<< (std::ostream & out, triqs::gfs::tail_const_view ) ;                                 (24)

    std::ostream & operator<< (std::ostream & out, const triqs::gfs::matsubara_freq & y) ;                         (25)

    template<typename HilbertSpace, typename ScalarType, bool BasedOnMap>                                          (26)
    std::ostream & operator<< (std::ostream & os, const state<HilbertSpace, ScalarType,
   BasedOnMap> & s) ;

    std::ostream & operator<< (std::ostream & os, const triqs::operators::canonical_ops_t &
   op) ;              (27)

    std::ostream & operator<< (std::ostream & os, const triqs::operators::monomial_t & m) ;                        (28)


---------------------------------------


.. code-block:: c

    #include <None>

..


(1)






---------------------------------------


.. code-block:: c

    #include <None>

..


(2)






---------------------------------------


.. code-block:: c

    #include <None>

..


(3)






---------------------------------------


.. code-block:: c

    #include <None>

..


(4)






---------------------------------------


.. code-block:: c

    #include <None>

..


(5)






---------------------------------------


.. code-block:: c

    #include <None>

..


(6)






---------------------------------------


.. code-block:: c

    #include <None>

..


(7)






---------------------------------------


.. code-block:: c

    #include <None>

..


(8)






---------------------------------------


.. code-block:: c

    #include <None>

..


(9)






---------------------------------------


.. code-block:: c

    #include <None>

..


(10)






---------------------------------------


.. code-block:: c

    #include <None>

..


(11)






---------------------------------------


.. code-block:: c

    #include <None>

..


(12)






---------------------------------------


.. code-block:: c

    #include <None>

..


(13)






---------------------------------------


.. code-block:: c

    #include <None>

..


(14)






---------------------------------------


.. code-block:: c

    #include <None>

..


(15)






---------------------------------------


.. code-block:: c

    #include <None>

..


(16)






---------------------------------------


.. code-block:: c

    #include <None>

..


(17)






---------------------------------------


.. code-block:: c

    #include <None>

..


(18)






---------------------------------------


.. code-block:: c

    #include <None>

..


(19)






---------------------------------------


.. code-block:: c

    #include <None>

..


(20)






---------------------------------------


.. code-block:: c

    #include <None>

..


(21)






---------------------------------------


.. code-block:: c

    #include <None>

..


(22)






---------------------------------------


.. code-block:: c

    #include <None>

..


(23)






---------------------------------------


.. code-block:: c

    #include <None>

..


(24) i/o






---------------------------------------


.. code-block:: c

    #include <None>

..


(25)






---------------------------------------


.. code-block:: c

    #include <None>

..


(26)






---------------------------------------


.. code-block:: c

    #include <None>

..


(27)






---------------------------------------


.. code-block:: c

    #include <None>

..


(28)
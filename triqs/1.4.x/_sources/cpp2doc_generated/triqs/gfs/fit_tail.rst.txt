..
   Generated automatically using the command :
   c++2doc.py -N triqs /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/doc/reference/doc_root.hpp --output_directory=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/doc/cpp2doc_generated --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/ --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/tools/
   /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/triqs/gfs/singularity/fit_tail.hpp

.. highlight:: c


.. _fit_tail:

fit_tail
==========

**Synopsis**:

.. code-block:: c

    void fit_tail (gf_view<triqs::gfs::imfreq> gf, triqs::gfs::tail_view known_moments,
   int max_moment, int n_min, int n_max, bool replace_by_fit) ;                                                    (1)

    void fit_tail (gf_view<triqs::gfs::imfreq> gf, triqs::gfs::tail_view known_moments,
   int max_moment, int neg_n_min, int neg_n_max, int pos_n_min, int pos_n_max, bool
   replace_by_fit) ;          (2)

    void fit_tail (gf_view<triqs::gfs::block_index, gf<triqs::gfs::imfreq> > block_gf,
   triqs::gfs::tail_view known_moments, int max_moment, int n_min, int n_max, bool
   replace_by_fit) ;            (3)

    void fit_tail (gf_view<triqs::gfs::imfreq, triqs::gfs::scalar_valued> gf,
   triqs::gfs::tail_view known_moments, int max_moment, int n_min, int n_max, bool
   replace_by_fit) ;                     (4)

    template<typename S>                                                                                                                                                                                    (5)
    array<triqs::gfs::tail, 3> fit_tail (gf_const_view<triqs::gfs::imfreq,
   tensor_valued<3>, S> g, array_const_view<triqs::gfs::tail, 3> known_moments, int
   max_moment, int n_min, int n_max) ;


---------------------------------------


.. code-block:: c

    #include <None>

..


(1) Fit the tail of a real (in tau) gf

.. note::
     Based on :ref:`fit_tail_impl`. Works for functions with positive only or all Matsubara frequencies.



Parameters
-------------


   * **gf**: the input gf<imfreq> Green's function




   * **known_moments**: the known moments in the form of a tail(_view)




   * **max_moment**: the highest fitted moment and the highest moment in the tail after the fit: max_moment




   * **n_min**: the Matsubara index of the first frequency to fit (must be positive)




   * **n_max**: the Matsubara index of the last frequency to fit (included)




   * **replace_by_fit**: if true, replace the gf data with the asymptotic behavior obtained by fitting the tails.







---------------------------------------


.. code-block:: c

    #include <None>

..


(2) Fit the tail of a complex (in tau) gf

.. note::
     Based on :ref:`fit_tail_impl`. Works for functions with positive only or all Matsubara frequencies.



Parameters
-------------


   * **gf**: the input gf<imfreq> Green's function




   * **known_moments**: the known moments in the form of a tail(_view)




   * **max_moment**: the highest fitted moment and the highest moment in the tail after the fit: max_moment




   * **neg_n_min**: the Matsubara index of the first frequency to fit (in the negative frequencies)




   * **neg_n_max**: the Matsubara index of the last frequency to fit (in the negative frequencies)




   * **pos_n_min**: the Matsubara index of the first frequency to fit (in the positive frequencies)




   * **pos_n_max**: the Matsubara index of the last frequency to fit (in the positive frequencies)




   * **replace_by_fit**: if true, replace the gf data with the asymptotic behavior obtained by fitting the tails.







---------------------------------------


.. code-block:: c

    #include <None>

..


(3) Fit the tail of a block_gf

.. note::
     Based on :ref:`fit_tail_impl`



Parameters
-------------


   * **gf**: the input Green's function




   * **known_moments**: the known moments in the form of a tail(_view)




   * **max_moment**: the highest fitted moment and the highest moment in the tail after the fit: max_moment




   * **n_min**: the Matsubara index of the first frequency to fit (included)




   * **n_max**: the Matsubara index of the last frequency to fit (included)




   * **replace_by_fit**: if true, replace the gf data with the asymptotic behavior obtained by fitting the tails.
  Range of replacement if replace_by_fit is true:

  - if the gf is real in tau, replace all frequencies w_n>= w_{n_min} and w_n <= - w_{n_min}

  - otherwise,

        -if n_min>0 (and n_max>0), replace all frequencies w_n >= w_n{n_min}

        -if n_min<0 (and n_max<0), replace all frequencies w_n <= w_n{n_max}







---------------------------------------


.. code-block:: c

    #include <None>

..


(4) Fit the tail of a gf (scalar-valued)

.. note::
     Based on :ref:`fit_tail_impl`



Parameters
-------------


   * **gf**: the input gf<imfreq> Green's function




   * **known_moments**: the known moments in the form of a tail(_view)




   * **max_moment**: the highest fitted moment and the highest moment in the tail after the fit: max_moment




   * **n_min**: the Matsubara index of the first frequency to fit (included)




   * **n_max**: the Matsubara index of the last frequency to fit (included)




   * **replace_by_fit**: if true, replace the gf data with the asymptotic behavior obtained by fitting the tails.
  Range of replacement if replace_by_fit is true:

  - if the gf is real in tau, replace all frequencies w_n>= w_{n_min} and w_n <= - w_{n_min}

  - otherwise,

        -if n_min>0 (and n_max>0), replace all frequencies w_n >= w_n{n_min}

        -if n_min<0 (and n_max<0), replace all frequencies w_n <= w_n{n_max}







---------------------------------------


.. code-block:: c

    #include <None>

..


(5) fit tail of tensor_valued Gf, rank 3
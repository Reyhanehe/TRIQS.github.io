..
   Generated automatically using the command :
   c++2doc.py -N triqs /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/doc/reference/doc_root.hpp --output_directory=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/doc/cpp2doc_generated --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/ --includes=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/mnt/home/wentzell/Dropbox/Coding/triqs_1.4/tools/
   /mnt/home/wentzell/Dropbox/Coding/triqs_1.4/triqs/./gfs/./meshes/matsubara_time.hpp

.. highlight:: c


.. _gf_mesh<imtime>_get_interpolation_data:

get_interpolation_data
========================

**Synopsis**:

.. code-block:: c

    B::interpol_data_t get_interpolation_data (interpol_t::Linear1d , double tau) const;


---------------------------------------



 redefine the interpolation to handle the anti-periodicity of fermions.
 It also reduces tau to [0,beta]
 because the get_interpolation_data is not virtual, to preserve inlining
 I simply rewrite evaluate again, it is short (same code as linear).
 it is necessary to do it as the level of the get_interpolation_data
 in order e.g. g(x,tau) to behave properly
..
   Generated automatically using the command :
   c++2doc.py -N triqs /var/lib/jenkins/jobs/triqs_master/workspace/triqs_src/doc/reference/doc_root.hpp --output_directory=/var/lib/jenkins/jobs/triqs_master/workspace/build/doc/cpp2doc_generated --includes=/var/lib/jenkins/jobs/triqs_master/workspace/triqs_src/ --includes=/var/lib/jenkins/jobs/triqs_master/workspace/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/var/lib/jenkins/jobs/triqs_master/workspace/triqs_src/tools/
   /var/lib/jenkins/jobs/triqs_master/workspace/triqs_src/triqs/gfs/singularity/fit_tail.hpp

.. highlight:: c


.. _fit_complex_tail_impl:

fit_complex_tail_impl
=======================

**Synopsis**:

.. code-block:: c

    triqs::gfs::tail fit_complex_tail_impl (gf_view<triqs::gfs::imfreq> gf, const
   triqs::gfs::tail_view known_moments, int max_moment, int n_min, int n_max) ;


---------------------------------------


.. code-block:: c

    #include <None>

..


 routine for fitting the tail (singularity) of a complex Matsubara Green's function

  This is a *linear* least squares problem (with non-linear basis functions)
  which is solved by singular value decomposition of the design matrix

.. note::
     the routine fits the real part (even moments) and the imaginary part (odd moments) separately for stability reasons





Parameters
-------------


   * **gf**: the input gf<imfreq> Green's function




   * **known_moments**: the known moments in the form of a tail(_view)




   * **max_moment**: the highest fitted moment and the highest moment in the tail after the fit: max_moment




   * **n_min**: the index of the first frequency to fit (included)




   * **n_max**: the index of the last frequency to fit (included)






Return value
--------------

the tail obtained by fitting
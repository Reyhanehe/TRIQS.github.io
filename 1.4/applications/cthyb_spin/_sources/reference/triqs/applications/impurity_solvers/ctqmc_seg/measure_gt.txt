..
   Generated automatically using the command:
   c++2doc.py -N applications -N impurity_solvers /var/lib/jenkins/jobs/cthyb_spin_gcc5/workspace/triqs_src/doc/reference/common.hpp --output_directory=/var/lib/jenkins/jobs/cthyb_spin_gcc5/workspace/build/doc/reference --includes=/var/lib/jenkins/jobs/cthyb_spin_gcc5/workspace/triqs_src/c++ --includes=/var/lib/jenkins/jobs/triqs_gcc5/workspace/build/INSTALL_DIR/include --includes=/var/lib/jenkins/jobs/triqs_gcc5/workspace/build/INSTALL_DIR/share/triqs/cmake --mako_location=/var/lib/jenkins/jobs/triqs_gcc5/workspace/build/INSTALL_DIR/share/triqs

.. highlight:: c


.. _measure_gt:

measure_gt
============

**Synopsis**:

.. code-block:: c

      class measure_gt;

Measure for the Green's function in imaginary time

  The imaginary-time Green's function is defined as


.. math::
		G_a(\tau) = -\langle T_\tau c_a(\tau)c_a^\dagger(0) \rangle

..

  and the corresponding improved estimator is given by


.. math::
		F_a^{\sigma}(\tau) = -\int_0^\beta d\tilde{\tau} \sum_b \langle T_\tau n_b(\tilde{\tau}) \mathcal{U}_{ba}(\tilde{\tau}-\tau) c_a(\tau)c_a^\dagger(0) \rangle

..


The imaginary-time measurement is most efficient. The performance of the algorithm does not scale with the number of points in the grid on which it is measured, so this number can and should be chosen large. By Nyquist's theorem, the Fourier transform will be correctly reproduce the function in the frequency domain on the first :math:`N_\omega\approx N_\tau/4\pi` frequencies.

These measurements are turned on by setting ``measure_gt`` and ``measure_ft`` to ``true``, respectively.
The number of time points on the grid is specified through ``n_tau_g`` and is the same for both observables.





Public members
-----------------

+------------+--------------------------------------------------------------------------+---------+
| Member     | Type                                                                     | Comment |
+============+==========================================================================+=========+
| params     | const triqs::applications::impurity_solvers::ctqmc_seg::qmc_parameters * |         |
+------------+--------------------------------------------------------------------------+---------+
| config     | const triqs::applications::impurity_solvers::ctqmc_seg::configuration *  |         |
+------------+--------------------------------------------------------------------------+---------+
| gt         | gf<triqs::gfs::block_index, gf<triqs::gfs::imtime> > &                   |         |
+------------+--------------------------------------------------------------------------+---------+
| ft         | gf<triqs::gfs::block_index, gf<triqs::gfs::imtime> > &                   |         |
+------------+--------------------------------------------------------------------------+---------+
| fprefactor | std::shared_ptr<precompute_fprefactor>                                   |         |
+------------+--------------------------------------------------------------------------+---------+
| beta       | double                                                                   |         |
+------------+--------------------------------------------------------------------------+---------+
| Noverbeta  | double                                                                   |         |
+------------+--------------------------------------------------------------------------+---------+
| Z          | double                                                                   |         |
+------------+--------------------------------------------------------------------------+---------+


Member functions
-----------------

+-----------------------------------------------------+---------------------------------+
| Member function                                     | Comment                         |
+=====================================================+=================================+
| :ref:`constructor <measure_gt_constructor>`         | constructor                     |
+-----------------------------------------------------+---------------------------------+
| :ref:`accumulate <measure_gt_accumulate>`           | accumulate the Green's function |
+-----------------------------------------------------+---------------------------------+
| :ref:`collect_results <measure_gt_collect_results>` | reduce and normalize G          |
+-----------------------------------------------------+---------------------------------+

.. toctree::
  :hidden:

   measure_gt/constructor
   measure_gt/accumulate
   measure_gt/collect_results
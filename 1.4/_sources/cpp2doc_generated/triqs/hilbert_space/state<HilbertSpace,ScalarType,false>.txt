..
   Generated automatically using the command:
   c++2doc.py -N triqs /var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/doc/reference/doc_root.hpp --output_directory=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/build/doc/cpp2doc_generated --includes=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/ --includes=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/tools/

.. highlight:: c


.. _state<HilbertSpace,ScalarType,false>:

state<HilbertSpace,ScalarType,false>
======================================

**Synopsis**:

.. code-block:: c

     template<typename HilbertSpace, typename ScalarType> class state<HilbertSpace,ScalarType,false>;

State: implementation based on `triqs::arrays::vector`






Member types
-----------------

+-----------------+-----------------------------------------------+
| Member type     | Comment                                       |
+=================+===============================================+
| value_type      | Accessor to `ScalarType` template parameter   |
+-----------------+-----------------------------------------------+
| hilbert_space_t | Accessor to `HilbertSpace` template parameter |
+-----------------+-----------------------------------------------+

Member functions
-----------------

+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| Member function                                                                         | Comment                                                          |
+=========================================================================================+==================================================================+
| :ref:`constructor <state\<HilbertSpace,ScalarType,false\>_constructor>`                 | Construct a new state object                                     |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| :ref:`size <state\<HilbertSpace,ScalarType,false\>_size>`                               | Return the dimension of the associated Hilbert space             |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| :ref:`operator() <state\<HilbertSpace,ScalarType,false\>_operator()>`                   | Access to individual amplitudes                                  |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| :ref:`operator+= -= *= /= <state\<HilbertSpace,ScalarType,false\>_operator+= -= *= /=>` | In-place addition of another state                               |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| :ref:`amplitudes <state\<HilbertSpace,ScalarType,false\>_amplitudes>`                   | Direct access to the storage container (`triqs::arrays::vector`) |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| :ref:`get_hilbert <state\<HilbertSpace,ScalarType,false\>_get_hilbert>`                 | Return a constant reference to the associated Hilbert space      |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+
| :ref:`set_hilbert <state\<HilbertSpace,ScalarType,false\>_set_hilbert>`                 | Reset the associated Hilbert space                               |
+-----------------------------------------------------------------------------------------+------------------------------------------------------------------+

.. toctree::
  :hidden:

   state<HilbertSpace,ScalarType,false>/constructor
   state<HilbertSpace,ScalarType,false>/size
   state<HilbertSpace,ScalarType,false>/operator()
   state<HilbertSpace,ScalarType,false>/operator+= -= *= /=
   state<HilbertSpace,ScalarType,false>/amplitudes
   state<HilbertSpace,ScalarType,false>/get_hilbert
   state<HilbertSpace,ScalarType,false>/set_hilbert

Non Member functions
-----------------------

+-------------------------------------------------------------------------+------------------------------------------------------+
| Non member function                                                     | Comment                                              |
+=========================================================================+======================================================+
| :ref:`dot_product <state\<HilbertSpace,ScalarType,false\>_dot_product>` | Calculate scalar product of two states               |
+-------------------------------------------------------------------------+------------------------------------------------------+
| :ref:`foreach <state\<HilbertSpace,ScalarType,false\>_foreach>`         | Apply a callable object to all amplitudes of a state |
+-------------------------------------------------------------------------+------------------------------------------------------+

.. toctree::
  :hidden:

   state<HilbertSpace,ScalarType,false>/dot_product
   state<HilbertSpace,ScalarType,false>/foreach
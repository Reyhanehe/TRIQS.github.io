..
   Generated automatically using the command :
   c++2doc.py -N triqs /var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/doc/reference/doc_root.hpp --output_directory=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/build/doc/cpp2doc_generated --includes=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/ --includes=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/tools/
   /var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/triqs/mc_tools/mc_generic.hpp

.. highlight:: c


.. _mc_generic_warmup_and_accumulate:

warmup_and_accumulate
=======================

**Synopsis**:

.. code-block:: c

    int warmup_and_accumulate (uint64_t n_warmup_cycles, uint64_t n_accumulation_cycles,
   uint64_t length_cycle, std::function<bool ()> stop_callback) ;


---------------------------------------



 Warmup and accumulate



Parameters
-------------


   * **n_warmup_cycles**:         Number of QMC cycles in the warmup




   * **n_accumulation_cycles**:   Number of QMC cycles in the accumulation (measures are done after each cycle).




   * **length_cycle**:            Number of QMC move attempts in one cycle




   * **stop_callback**:           A callback function () -> bool. It is called after each cycle
                                to and the computation stops when it returns true.
                                Typically used to set up the time limit, cf doc.
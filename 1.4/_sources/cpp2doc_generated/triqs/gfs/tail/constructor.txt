..
   Generated automatically using the command :
   c++2doc.py -N triqs /var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/doc/reference/doc_root.hpp --output_directory=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/build/doc/cpp2doc_generated --includes=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/ --includes=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/build/Config --compiler_options=-DTRIQS_BUILDING_LIBRARY --mako_location=/var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/tools/
   /var/lib/jenkins/jobs/triqs_clang3.8/workspace/triqs_src/triqs/./gfs/./impl/../singularity/./tail.hpp

.. highlight:: c


.. _tail_constructor:

constructor
=============

**Synopsis**:

.. code-block:: c

    tail () ;                                                                  (1)

    tail (int N1, int N2, int size_ = 10, int order_min = -1) ;                (2)

    tail (const shape_type & sh, int size_ = 10, int order_min = -1) ;         (3)

    tail (mini_vector<int, 0>  = 0) ;                                          (4)

    tail (const B::data_type & d, const B::mask_type & m, int order_min) ;     (5)

    tail (const triqs::gfs::tail & g) ;                                        (6)

    tail (const triqs::gfs::tail_view & g) ;                                   (7)

    tail (const triqs::gfs::tail_const_view & g) ;                             (8)

    tail (triqs::gfs::tail && ) ;                                              (9)


---------------------------------------



(1)






---------------------------------------



(2) constructor



Parameters
-------------


   * **N1**: first dimension




   * **N2**: second dimension




   * **size_**: number of moments in the tail




   * **order_min**: order of the first moment






---------------------------------------



(3) constructor



Parameters
-------------


   * **sh**: shape of the tail




   * **size_**: number of moments in the tail




   * **order_min**: order of the first moment






---------------------------------------



(4)






---------------------------------------



(5)






---------------------------------------



(6)






---------------------------------------



(7)






---------------------------------------



(8)






---------------------------------------



(9)